package com.archmageinc.RandomEncounters.Mobs;

import com.archmageinc.RandomEncounters.RandomEncounters;
import org.bukkit.entity.LivingEntity;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.json.simple.JSONObject;

/**
 * Represents the configuration of a Potion Effect to be placed on a Mob.
 * 
 * @author ArchmageInc
 */
public class MobPotionEffect {
    
    /**
     * The actual effect generated by this configuration.
     */
    private PotionEffect effect;
    
    /**
     * The probability this effect will be placed.
     */
    private Long probability;
    
    /**
     * The type of effect to create.
     */
    private PotionEffectType type;
    
    /**
     * How long the effect will last in seconds.
     */
    private Long duration;
    
    /**
     * The adjusted strength of the effect.
     */
    private Long amplifier;
    
    /**
     * Constructor for the effect based on JSON configuration.
     * 
     * @param jsonConfiguration The JSON Configuration
     */
    public MobPotionEffect(JSONObject jsonConfiguration){
        try{
            probability =   jsonConfiguration.get("probability")==null ? 0 : ((Number) jsonConfiguration.get("probability")).longValue();
            type        =   PotionEffectType.getByName((String) jsonConfiguration.get("type"));
            amplifier   =   jsonConfiguration.get("amplifier")==null ? 0 : ((Number) jsonConfiguration.get("amplifier")).longValue();
            duration    =   jsonConfiguration.get("duration")==null ? 0 : ((Number) jsonConfiguration.get("duration")).longValue();
            if(type!=null){
                effect  =   new PotionEffect(type,duration.intValue()*50,amplifier.intValue());
            }else{
                RandomEncounters.getInstance().logWarning("Invalid potion effect configuration: Unknown potion effect "+(String) jsonConfiguration.get("type"));
            }
        }catch(ClassCastException e){
            RandomEncounters.getInstance().logError("Invalid potion effect configuration: "+e.getMessage());
        }
    }
    
    /**
     * Apply this effect to the given entity if applicable.
     * 
     * @param entity The LivingEntity on which to place the effect.
     */
    public void checkApply(LivingEntity entity){
        if(entity!=null && effect!=null && Math.random()<probability){
            entity.addPotionEffect(effect);
        }
    }
}
